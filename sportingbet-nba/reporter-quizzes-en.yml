workflow:
  name: "workflow-reporter-quizzes-en"
  title: "Reporter Quizzes NBA - EN"
  description: "Workflow to produce quizzes in English."
  context-variables:
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is not True and 'skipped' or 'executed'"
  tasks:
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'game'"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_quizzes_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_quizzes_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 1 load-event
    - type: "document"
      name: "load-event-prelive"
      description: "Search for events in the database."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.status: "{'$in': ['soccer-game']}"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=24)}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.reporter_quizzes_en_status: "{'$exists': False}"
        value.version_control.reporter_briefing_en_status: "'processed'"
      inputs:
        name: "'game'"
      outputs:
        event_code: "$.get('documents')[0].get('metadata').get('event_code') if $.get('documents') else None"
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_quizzes_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_quizzes_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 2 update-event-status
    - type: "document"
      name: "update-event-preevent-start"
      description: "Update the events document preevent."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'reporter_quizzes_en_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    # 3 load-content-snippet-en
    - type: "document"
      name: "load-content-snippet-en"
      description: "Load the content snippet."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 25
        search-vector: false
      filters:
        metadata: |
          {
            'event_code': $.get('event_code'),
            'language': 'en'
          }
      inputs:
        name: "'content-snippet'"
      outputs:
        content-snippets: "[{**d.get('value', {})} for d in $.get('documents', [])]"
    # 4 prompt-content-quiz-en
    - type: "prompt"
      name: "prompt-reporter-quizzes-nba-en"
      description: "Generate a quiz for the upcoming game"
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        content-snippets: "$.get('content-snippets')"
      outputs:
        bulk-quiz-en: |
          [
            {
              **c,
              'title': f"$.(title) - {c.get('question', '')}",
              'metadata': {
                'event_code': '$.(event_code)',
                'language': 'en'
              }
            }
            for c in $.get('questions', [])
          ]
        content-quizzes: "$"
    # 5 bulk-save-quizzes
    - type: "document"
      name: "bulk-save-quizzes"
      description: "Bulk save the quizzes."
      config:
        action: "bulk-save"
        embed-vector: true
        force-update: true
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "content-quiz"
      documents:
        items: "$.get('parsed-items')"
      inputs:
        parsed-items: $.get('bulk-quiz-en', [])
    # 6 update-event-preevent
    - type: "document"
      name: "update-event-preevent-end"
      description: "Update the events document preevent."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'reporter_quizzes_count': $.get('reporter_quizzes_count', 0) + 1,
              'reporter_quizzes_en_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
