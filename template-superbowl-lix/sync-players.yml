workflow:
  name: "workflow-sync-players"
  title: "Sync Players"
  description: "Workflow to synchronize a season players from Superbowl LIX API to Machina."
  context-variables:
    api-sr-nfl:
      sportradar_api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is not True and 'skipped' or 'executed'"
  tasks:
    
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'game'"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        sync_players_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('sync_players_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    
    # 1 load-event
    - type: "document"
      name: "load-event-prelive"
      description: "Search for events in the database."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.status: "{'$in': ['scheduled']}"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=24)}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.sync_players_status: "{'$exists': False}"
        value.version_control.sync_teams_status: "'processed'"
      inputs:
        name: "'game'"
      outputs:
        event_code: "$.get('documents')[0].get('metadata').get('event_code') if $.get('documents') else None"
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        sync_players_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('sync_players_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    
    # 2 update-event-status
    - type: "document"
      name: "update-event-preevent-start"
      description: "Update the events document preevent."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'sync_players_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    
    # 3 load-event-summary
    - type: "document"
      name: "load-event-summary"
      description: "Load the events document summary."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        metadata: |
          {
            'document_type': 'event-summary',
            'event_code': $.get('event_code'),
            'language': 'en'
          }
      inputs:
        name: "'event-summary'"
      outputs:
        event-summary: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        event-summary_exists: "len($.get('documents')) > 0"

    # 6 save search results
    # - type: "document"
    #   name: "update-event-summary"
    #   description: "Update the events document."
    #   condition: "$.get('event_exists') is True"
    #   config:
    #     action: "update"
    #     embed-vector: false
    #     force-update: true
    #   documents:
    #     event-summary: |
    #       {
    #         "execution": datetime.utcnow(),
    #         "home-team": $.get('home-team'),
    #         "away-team": $.get('away-team'),
    #         "title": f"{$.get('title')} - Teams Profile",
    #         "status": 'active'
    #       }
    #   metadata:
    #     document_type: "'event-summary'"
    #     event_code: "$.get('event_code')"
    #     language: "'en'"
    
    # 7 update-event-preevent
    - type: "document"
      name: "update-event-preevent-end"
      description: "Update the events document preevent."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        game: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'sync_players_count': $.get('sync_players_count', 0) + 1,
              'sync_players_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
