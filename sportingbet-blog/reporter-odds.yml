workflow:
  name: "reporter-odds"
  title: "Reporter Odds"
  description: "Workflow to produce odds analysis."
  context-variables:
    debugger:
      enabled: true
    api-sportingbet:
      Bwin-AccessId: "$TEMP_CONTEXT_VARIABLE_BWIN_ACCESS_ID"
      Bwin-AccessIdToken: "$TEMP_CONTEXT_VARIABLE_BWIN_ACCESS_ID_TOKEN"
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('selected-fixture-exists') is not True and ($.get('event_exists') is not True and 'skipped' or 'failed') or 'executed'"
  
  tasks:
    
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search event (sportradar) by code."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_odds_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_odds_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"

    # 1 load-event-by-schedule
    - type: "document"
      name: "load-event-by-schedule"
      description: "Search for schedule events (sportradar)."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started', 'live']}"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=72)}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.reporter_odds_status: "{'$exists': False}"
        # value.version_control.updated: "{'$lt': datetime.utcnow() - timedelta(minutes=2)}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_odds_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_odds_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"

    # 2 version-control-update
    - type: "document"
      name: "version-control-update"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'reporter_odds_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 3 load-fixture-by-similarity
    - type: "document"
      name: "load-fixture-by-similarity"
      description: "Load fixture (from sportingbet) by title similarity."
      config:
        action: "search"
        threshold-docs: 1
        threshold-similarity: 0.10
        search-limit: 100
        search-vector: true
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      inputs:
        name: "'game-fixture'"
        search-limit: "'100'"
        search-query: "$.get('title')"
      outputs:
        selected-fixture: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        selected-fixture-exists: "len($.get('documents', [])) > 0"
        selected-fixture-title: "$.get('documents')[0].get('value', {}).get('title') if $.get('documents') else None"
        selected-fixture-id: "$.get('documents')[0].get('value', {}).get('id', {}).get('entityId') if $.get('documents') else None"
        similarity-score: "$.get('documents')[0].get('similarity') if $.get('documents') else None"

    # 4 verify-selected-fixture
    - type: "prompt"
      name: "verify-selected-fixture"
      description: "Verify the selected fixture."
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        scheduled-item-title: "$.get('title')"
        selected-fixture-title: "$.get('selected-fixture-title')"
        similarity-score: "$.get('similarity-score', 0)"
      outputs:
        is-match: "$.get('is-match')"

    # 5 load-market-by-fixture
    - type: "connector"
      name: "load-market-by-fixture"
      description: "Get a market by fixture from Sportingbet"
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is True"
      connector:
        name: "api-sportingbet"
        command: "get-offer/api/{sportId}/{country}/fixtures"
        command_attribute:
          country: "'br'"
          sportId: "'4'"
      inputs:
        fixtureIds: "$.get('selected-fixture-id')" 
      outputs:
        markets: "$.get('items', [])[0].get('markets', [])"
        bulk-markets: |
          [
            {
              **m,
              'title': f"$.(title) - {m.get('name', {}).get('shortText')}"
            }
            for m in $.get('items', [])[0].get('markets', [])
            if m.get('marketType') == 'Over/Under' or m.get('marketSubType') == '2Up3wayPricing'
          ]

    # 6 research-match-odds
    - type: "prompt"
      name: "research-match-odds"
      description: "Research match odds."
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        title: "$.get('title')"
        markets: "$.get('bulk-markets')"
      outputs:
        research-match-odds: "$"
        research-match-odds-bulk: |
          [
            {
              'subject': '$.(title)',
              'text': c.get('content', ''),
              'title': f"$.(title) - {c.get('title', '')}",
              'metadata': {
                'event_code': '$.(event_code)',
                'language': 'en'
              }
            }
            for c in $.get('snippets', [])
          ]

    # 7 update-documents
    - type: "document"
      name: "update-documents-odds"
      description: "Update the documents."
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        market-odds: |
          {
            "execution": datetime.utcnow(),
            "content": $.get('research-match-odds'),
            "title": f"{$.get('title')} - Market Odds",
            "status": 'active'
          }
      metadata:
        event_code: "$.get('event_code')"
    
    # 8 update-snippets
    - type: "document"
      name: "update-snippets"
      condition: "$.get('event_exists') is True"
      description: "Update the snippets."
      config:
        action: "bulk-save"
        embed-vector: true
        force-update: true
      connector:
        name: "sdk-openai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "content-snippet"
      documents:
        items: "$.get('parsed-items')"
      inputs:
        parsed-items: "$.get('research-match-odds-bulk')"

    # 9 version-control-success
    - type: "document"
      name: "version-control-success"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'game-fixture-id': $.get('selected-fixture-id'),
              'processing': False,
              'reporter_odds_count': $.get('reporter_odds_count', 0) + 1,
              'reporter_odds_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 10 version-control-failure
    - type: "document"
      name: "version-control-failure"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True and $.get('selected-fixture-exists') is False"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'reporter_odds_failed': $.get('reporter_odds_count', 0) + 1,
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
