workflow:
  name: "research-team"
  title: "Research Team"
  description: "Workflow to produce research team."
  context-variables:
    debugger:
      enabled: true
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is None and 'skipped' or 'executed'"
  tasks:
    
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search event (sportradar) by code."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        research_team_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('research_team_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"

    # 1 load-event-by-schedule
    - type: "document"
      name: "load-event-by-schedule"
      description: "Search for schedule events (sportradar)."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started', 'live']}"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=72)}"
        value.version_control.processing: "{'$ne': True}"
        value.version_control.research_team_status: "{'$exists': False}"
        # value.version_control.updated: "{'$lt': datetime.utcnow() - timedelta(minutes=10)}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event_exists: "len($.get('documents', [])) > 0"
        event_selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        research_team_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('research_team_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"

    # 2 version-control-update
    - type: "document"
      name: "version-control-update"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': True,
              'research_team_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 3 research-team-history (home team)
    - type: "prompt"
      name: "research-team-history"
      description: "Generate research team history."
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        title: "$.get('title')"
        team: "$.get('event_selected').get('sport_event', {}).get('competitors', [])[0]"
      outputs:
        research-team-history-home: "$"

    # 4 research-team-history (away team)
    - type: "prompt"
      name: "research-team-history"
      description: "Generate research team history."
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        title: "$.get('title')"
        team: "$.get('event_selected').get('sport_event', {}).get('competitors', [])[1]"
      outputs:
        research-team-history-away: "$"
        
    # 5 version-control-success
    - type: "document"
      name: "version-control-success"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'research_team_count': $.get('research_team_count', 0) + 1,
              'research_team_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"

    # 6 version-control-failure
    - type: "document"
      name: "version-control-failure"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is not True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event_selected'),
            'version_control': {
              **$.get('event_selected').get('version_control', {}),
              'processing': False,
              'research_team_failed': $.get('research_team_count', 0) + 1,
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"

