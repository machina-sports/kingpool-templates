workflow:
  name: "tallysight-sync-widgets"
  title: "Sync Betting Widgets"
  description: "Workflow to synchronize betting widgets from Tallysight API to Machina."
  context-variables:
    debugger:
      enabled: true
    tallysight:
      key: "$MACHINA_CONTEXT_VARIABLE_TALLYSIGHT_API_KEY"
    openai:
      api_key: "$MACHINA_CONTEXT_VARIABLE_OPENAI_API_KEY"
  inputs:
    league: "$.get('league')"
    team: "$.get('team', None)"
    player: "$.get('player', None)"
    team1: "$.get('team1', None)"
    team2: "$.get('team2', None)"
    date: "$.get('date', None)"
    widget_type: "$.get('widget_type')"
    force-update: "($.get('force-update') == 'true')"
    sportsbooks: "$.get('sportsbooks', [])"
    variant: "$.get('variant', 'best-odds')"
  outputs:
    widgets: "$.get('widgets')"
    workflow-status: "$.get('workflow-status', 'skipped')"
  tasks:

    # 0 version-control-load
    - type: "document"
      name: "version-control-load"
      description: "Load the version controller"
      condition: "$.get('league') is not None and $.get('widget_type') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        metadata.league: "$.get('league')"
        metadata.widget_type: "$.get('widget_type')"
        metadata.entity: "$.get('team') or $.get('player') or ($.get('team1') and $.get('team2') and $.get('date'))"
      inputs:
        name: "'sync-widgets-controller'"
      outputs:
        is_updated: "$.get('documents')[0].get('updated', datetime.utcnow() - timedelta(minutes=120)) > datetime.utcnow() - timedelta(minutes=60) if $.get('documents') else None"

    # 1a load-bet-finder-player
    - type: "connector"
      name: "load-bet-finder-player"
      description: "Get a bet finder widget for a player from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'bet-finder' and $.get('player') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/bet-finder/leagues/{league}/players/{player}"
        command_attribute:
          league: "$.get('league')"
          player: "$.get('player')"
      inputs:
        sportsbooks: "$.get('sportsbooks')"
        bestodds: "$.get('variant') == 'best-odds'"
        embed: "html"
      outputs:
        widgets: "$"
        widget_data: "$.get('player')"
        workflow-status: "'executed'"

    # 1b load-bet-finder-team
    - type: "connector"
      name: "load-bet-finder-team"
      description: "Get a bet finder widget for a team from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'bet-finder' and $.get('team') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/bet-finder/leagues/{league}/teams/{team}"
        command_attribute:
          league: "$.get('league')"
          team: "$.get('team')"
      inputs:
        sportsbooks: "$.get('sportsbooks')"
        bestodds: "$.get('variant') == 'best-odds'"
        embed: "html"
      outputs:
        widgets: "$"
        widget_data: "$.get('team')"
        workflow-status: "'executed'"

    # 1c load-odds-text
    - type: "connector"
      name: "load-odds-text"
      description: "Get odds text widget for a matchup from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'odds-text' and $.get('team1') is not None and $.get('team2') is not None and $.get('date') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/odds-text/gamelines/leagues/{league}/matchup/{team1}/{team2}/{date}"
        command_attribute:
          league: "$.get('league')"
          team1: "$.get('team1')"
          team2: "$.get('team2')"
          date: "$.get('date')"
      inputs:
        sportsbooks: "$.get('sportsbooks')"
        bestodds: "$.get('variant') == 'best-odds'"
        inlineodds: "true"
        embed: "html"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1d load-futures-team
    - type: "connector"
      name: "load-futures-team"
      description: "Get futures tile widgets for a team from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'futures' and $.get('team') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/futures/leagues/{league}/teams/{team}"
        command_attribute:
          league: "$.get('league')"
          team: "$.get('team')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1e load-futures-player
    - type: "connector"
      name: "load-futures-player"
      description: "Get futures tile widgets for a player from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'futures' and $.get('player') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/futures/leagues/{league}/players/{player}"
        command_attribute:
          league: "$.get('league')"
          player: "$.get('player')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1f load-gamelines
    - type: "connector"
      name: "load-gamelines"
      description: "Get gamelines tile widget for a matchup from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'gamelines' and $.get('team1') is not None and $.get('team2') is not None and $.get('date') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/gamelines/leagues/{league}/matchup/{team1}/{team2}/{date}"
        command_attribute:
          league: "$.get('league')"
          team1: "$.get('team1')"
          team2: "$.get('team2')"
          date: "$.get('date')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1g load-props-matchup
    - type: "connector"
      name: "load-props-matchup"
      description: "Get props tile widgets for a matchup from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'props' and $.get('team1') is not None and $.get('team2') is not None and $.get('date') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/props/leagues/{league}/matchup/{team1}/{team2}/{date}"
        command_attribute:
          league: "$.get('league')"
          team1: "$.get('team1')"
          team2: "$.get('team2')"
          date: "$.get('date')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1h load-props-player
    - type: "connector"
      name: "load-props-player"
      description: "Get props tile widgets for a player from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'props' and $.get('player') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/props/leagues/{league}/players/{player}"
        command_attribute:
          league: "$.get('league')"
          player: "$.get('player')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 1i load-props-team
    - type: "connector"
      name: "load-props-team"
      description: "Get props tile widgets for a team from Tallysight"
      condition: "($.get('is_updated') is not True or $.get('force-update') is True) and $.get('widget_type') == 'props' and $.get('team') is not None"
      connector:
        name: "tallysight"
        command: "get-api/v2/widgets/tiles/props/leagues/{league}/teams/{team}"
        command_attribute:
          league: "$.get('league')"
          team: "$.get('team')"
      inputs:
        variant: "$.get('variant')"
        sportsbook: "$.get('sportsbooks')[0] if $.get('variant') == 'sportsbook' and $.get('sportsbooks') else None"
        deeplinks: "true"
        embed: "iframe"
      outputs:
        widgets: "$"
        widget_data: "$.get('topic')"
        workflow-status: "'executed'"

    # 2 save-widgets
    - type: "document"
      name: "save-widgets"
      description: "Save the widget data"
      condition: "$.get('workflow-status') == 'executed'"
      config:
        action: "save"
        embed-vector: true
      connector:
        name: "openai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "tallysight-widget"
      documents:
        widget: |
          {
            'id': $.get('widget_data', {}).get('id', str(uuid.uuid4())),
            'league': $.get('league'),
            'widget_type': $.get('widget_type'),
            'entity': $.get('team') or $.get('player') or f"{$.get('team1')} vs {$.get('team2')} {$.get('date')}",
            'data': $.get('widgets'),
            'updated': datetime.utcnow()
          }
      metadata:
        league: "$.get('league')"
        widget_type: "$.get('widget_type')"
        entity: "$.get('team') or $.get('player') or ($.get('team1') and $.get('team2') and $.get('date'))"

    # 3 version-control-update
    - type: "document"
      name: "version-control-update"
      description: "Update the version controller"
      condition: "$.get('workflow-status') == 'executed'"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        sync-widgets-controller: |
          {
            'version_control': {
              'sync_count': $.get('sync_count', 0) + 1,
              'updated': datetime.utcnow()
            }
          }
      metadata:
        league: "$.get('league')"
        widget_type: "$.get('widget_type')"
        entity: "$.get('team') or $.get('player') or ($.get('team1') and $.get('team2') and $.get('date'))" 