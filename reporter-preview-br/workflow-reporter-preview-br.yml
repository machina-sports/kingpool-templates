workflow:
  name: "workflow-reporter-preview-br"
  title: "Reporter Preview Brazilian Portuguese"
  description: "Workflow to produce preview in Brazilian Portuguese."
  context-variables:
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event-exists') is True and 'executed' or 'skipped'"
  tasks:
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        preview_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('preview_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 1 load-event
    - type: "document"
      name: "load-event-prelive"
      description: "Search for events in the database."
      condition: "$.get('event-exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started']}"
        value.version_control.preview_pt_br_status: "{'$exists': False}"
        value.version_control.reporter_summary_status: "'processed'"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=72)}"
        value.processing: "{'$ne': True}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        preview_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('preview_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 1 update-event-status
    - type: "document"
      name: "update-event-preevent-start"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'processing': True,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'preview_pt_br_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    # 2 load-content-snippet-br
    - type: "document"
      name: "load-content-snippet-br"
      description: "Load the content snippet."
      condition: "$.get('event-exists') is True"
      config:
        action: "search"
        search-limit: 10
        search-vector: false
      filters:
        metadata: |
          {
            'event_code': $.get('event_code'),
            'language': 'en'
          }
      inputs:
        name: "'content-snippet'"
      outputs:
        content-snippets: "[{**d.get('value', {})} for d in $.get('documents', [])]"
    # 3 prompt-reporter-preview-br
    - type: "prompt"
      name: "prompt-reporter-preview-br"
      description: "Generate a preview for the upcoming game"
      condition: "$.get('event-exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        start_time: "$.get('event-selected').get('start_time')"
        content-snippets: "$.get('content-snippets')"
      outputs:
        content-preview-br: "$"
    # 4 update-event-preview-br
    - type: "document"
      name: "update-event-preview-br"
      description: "Update the document."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        content-preview: |
          {
            **$.get('content-preview-br', {}),
            'execution': datetime.utcnow(),
            'status': 'active'
          }
      metadata:
        document_type: "'content-preview'"
        event_code: "$.get('event_code')"
        season_code: "$.get('season_code')"
        language: "'br'"
    # 5 update-event-preevent
    - type: "document"
      name: "update-event-preevent-end"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'processing': False,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'preview_count': $.get('preview_count', 0) + 1,
              'preview_pt_br_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event-selected').get('sport_event', {}).get('id')"
