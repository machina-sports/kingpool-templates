workflow:
  name: "workflow-reporter-summary"
  title: "Reporter Summary"
  description: "Workflow to produce summary content."
  context-variables:
    api-sportradar-soccer:
      sportradar_api_key: "$TEMP_CONTEXT_VARIABLE_SPORTRADAR_SOCCER_V4_API_KEY"
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event-exists') is not True and 'skipped' or 'executed'"
  tasks:
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_summary_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_summary_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 1 load-event
    - type: "document"
      name: "load-event-prelive"
      description: "Search for events in the database."
      condition: "$.get('event-exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started', 'live']}"
        value.version_control.reporter_summary_status: "{'$exists': False}"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=72)}"
        value.processing: "{'$ne': True}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_summary_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_summary_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 2 update-event-status
    - type: "document"
      name: "update-event-preevent-start"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'processing': True,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'reporter_summary_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    # 3 fetch-event-summary
    - type: "connector"
      name: "fetch-event-summary"
      description: "Get Sport_Events/Summary from SportRadar"
      condition: "$.get('event-exists') is True"
      connector:
        name: "api-sportradar-soccer"
        command: "get-sport_events/{event_code}/{data_type}"
        command_attribute:
          data_type: "'summary.json'"
          event_code: "$.get('event_code')"
      inputs:
        api_key: "$.get('sportradar_api_key')"
      outputs:
        event-summary: "$"
        event-status: "$.get('sport_event_status', {}).get('status', '')"
        match-status: "$.get('sport_event_status', {}).get('match_status', '')"
        round-title: f"{$.get('sport_event', {}).get('sport_event_context', {}).get('category', {}).get('name', '')} {$.get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('name', '')}"
        round-number: "$.get('sport_event', {}).get('sport_event_context', {}).get('round', {}).get('number', '')"
        team-away: "next(item for item in $.get('sport_event').get('competitors') if item['qualifier'] == 'away')"
        team-home: "next(item for item in $.get('sport_event').get('competitors') if item['qualifier'] == 'home')"
    # 4 save search results
    - type: "document"
      name: "update-event-summary"
      description: "Update the events document."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        event-summary: |
          {
            "execution": datetime.utcnow(),
            "event-summary": $.get('event-summary'),
            "event-status": $.get('event-status'),
            "match-status": $.get('match-status'),
            "team-away": $.get('team-away'),
            "team-home": $.get('team-home'),
            "title": f"{$.get('title')} - Summary",
            "status": 'active'
          }
      metadata:
        document_type: "'event-summary'"
        event_code: "$.get('event_code')"
        season_code: "$.get('season_code')"
        language: "'en'"
    # 5 update-event-preevent
    - type: "document"
      name: "update-event-preevent-end"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'processing': False,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'reporter_summary_count': $.get('reporter_summary_count', 0) + 1,
              'reporter_summary_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event-selected').get('sport_event', {}).get('id')"
