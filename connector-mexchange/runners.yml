workflow:
  name: "exchange-runners"
  title: "Exchange - Runners"
  description: "Workflow to fetch runners from Exchange."
  inputs:
    event_id: "$.get('event_id', None)"
    market_id: "$.get('market_id', None)"
  outputs:
    document: "$.get('document')"
    workflow-status: "'executed'"
  tasks:

    # load-exchange-map  
    - type: "document"
      name: "load-exchange-map"
      description: "Search for exchange map in the database."
      condition: "$.get('event_id') is not None or $.get('param_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      inputs:
        name: "'exchange-map'"
      filters:
        value.eventIdMbook: "$.get('event_id')"
      outputs:
        exchange-map: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        exchange-map-exists: "len($.get('documents')) > 0"
        event_code: "$.get('documents')[0].get('value', {}).get('eventIdSportRadar') if $.get('documents') else None"

    # fetch-markets
    - type: "connector"
      name: "fetch-markets"
      description: "Get Runners from Exchange"
      condition: "$.get('event_id') is not None and $.get('market_id') is not None"
      connector:
        name: "exchange"
        command: "fetch_markets"
      inputs:
        event_id: "$.get('event_id')"
        market_id: "$.get('market_id')"
      outputs:
        catalogue: "$"
        catalogue_name: "$.get('name')"
        market_name: "$.get('markets', [{}])[0].get('name')"
        markets: |
          [
            {
              **c,
              'title': f"$.(catalogue_name) - {c.get('name')} {c.get('handicap', '')}".strip(),
              'metadata': {
                'market_id': c.get('id'),
                'event_id': c.get('event-id'),
                'event_code': '$.(event_code)',
              }
            }
            for c in $.get('markets')
          ]
        runners: |
          [
            {
              **c,
              'title': f"$.(catalogue_name) - $.(market_name) {c.get('name')}",
              'metadata': {
                'runner_id': c.get('id'),
                'market_id': c.get('market-id'),
                'event_id': c.get('event-id'),
                'event_code': '$.(event_code)',
              }
            }
            for c in $.get('markets', [{}])[0].get('runners', [])
          ]

    # bulk-save-markets
    - type: "document"
      name: "bulk-save-markets"
      description: "Bulk save the markets."
      config:
        action: "bulk-update"
        embed-vector: false
        force-update: true
      document_name: "exchange-market"
      documents:
        items: "$.get('parsed')"
      inputs:
        parsed: "$.get('markets')"

    # bulk-save-runners
    - type: "document"
      name: "bulk-save-runners"
      description: "Bulk save the runners."
      config:
        action: "bulk-update"
        embed-vector: false
        force-update: true
      document_name: "exchange-runner"
      documents:
        items: "$.get('parsed')"
      inputs:
        parsed: "$.get('runners')"

    # bulk-save-prices
    - type: "document"
      name: "bulk-save-prices"
      description: "Bulk save the prices."
      config:
        action: "bulk-save"
        embed-vector: false
      foreach:
        name: "runner"
        expr: "'None'"
        value: "$.get('runners')"
      document_name: "exchange-price"
      documents:
        items: |
          [
            {
              **d,
              'title': f"$.(catalogue_name) - $.(market_name) {d.get('runner-name')}: {d.get('title')}",
            }
            for d in [
              {
                **c,
                'title': f"{c.get('side').upper()} {c.get('odds')} ({c.get('available-amount')})",
                'metadata': {
                  'runner_id': $.(runner).get('id'),
                  'market_id': $.(runner).get('market-id'),
                  'event_id': $.(runner).get('event-id'),
                  'event_code': '$.(event_code)',
                  'price-side': c.get('side')
                },
                'runner-name': $.(runner).get('name')
              }
              for c in $.get('runner', {}).get('prices', [])
            ]
          ]
