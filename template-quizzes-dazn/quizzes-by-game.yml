workflow:
  name: "quizzes-by-game"
  title: "Quizzes by Game"
  description: "Workflow to produce quizzes by game."
  context-variables:
    debugger:
      enabled: true
    sdk-openai:
      api_key: "$TEMP_CONTEXT_VARIABLE_SDK_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event_exists') is not True and 'skipped' or 'executed'"
  tasks:

    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event_exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_quizzes_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_quizzes_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    
    # 1 load-event-scheduled
    - type: "document"
      name: "load-event-scheduled"
      description: "Search for events in the database."
      condition: "$.get('event_exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started', 'live']}"
        value.version_control.reporter_quizzes_en_status: "{'$exists': False}"
        value.version_control.research_news_status: "'processed'"
        value.version_control.research_stats_status: "'processed'"
        value.version_control.research_team_status: "'processed'"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=144)}"
        value.processing: "{'$ne': True}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event_exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_quizzes_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_quizzes_count', 0) if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    
    # 2 version-control-update
    - type: "document"
      name: "version-control-update"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'processing': True,
              'reporter_quizzes_en_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    
    # 3 load-content-snippet-en
    - type: "document"
      name: "load-content-snippet-en"
      description: "Load the content snippet."
      condition: "$.get('event_exists') is True"
      config:
        action: "search"
        search-limit: 100
        search-vector: false
      filters:
        metadata.event_code: "$.get('event_code')"
      inputs:
        name: "'content-snippet'"
      outputs:
        content-snippets: "[{**d.get('value', {})} for d in $.get('documents', [])]"
    
    # 4 prompt-content-polls
    - type: "prompt"
      name: "prompt-polls"
      description: "Generate a poll for the upcoming game"
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        content-snippets: "$.get('content-snippets')"
      outputs:
        content-polls: "$"
    
    # 4 prompt-content-quiz-en
    - type: "prompt"
      name: "prompt-quizzes"
      description: "Generate a quiz for the upcoming game"
      condition: "$.get('event_exists') is True"
      connector:
        name: "sdk-openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        content-snippets: "$.get('content-snippets')"
      outputs:
        content-quizzes: "$"
    
    # 5 save content-quizzes
    - type: "document"
      name: "save-content-quizzes"
      condition: "$.get('event_exists') is True"
      config:
        action: "save"
        embed-vector: false
      documents:
        content-quizzes: |
          {
            **$.get('content-quizzes'),
            'title': f"$.(title) - Quizzes"
          }
        content-polls: |
          {
            **$.get('content-polls'),
            'title': f"$.(title) - Polls"
          }
      metadata:
        event_code: "$.get('event_code')"
        language: "'en'"

    # 6 version-control-finish
    - type: "document"
      name: "version-control-finish"
      description: "Update the events document version control."
      condition: "$.get('event_exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        schedule: |
          {
            **$.get('event-selected'),
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'processing': False,
              'reporter_quizzes_count': $.get('reporter_quizzes_count', 0) + 1,
              'reporter_quizzes_en_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event_code')"
