workflow:
  name: "workflow-reporter-polls-es"
  title: "Reporter Polls Spanish"
  description: "Workflow to produce polls in Spanish."
  context-variables:
    openai:
      api_key: "$MACHINA_CONTEXT_VARIABLE_OPENAI_API_KEY"
  inputs:
    event_code: "$.get('event_code') or None"
  outputs:
    events: "$.get('events')"
    workflow-status: "$.get('event-exists') is not True and 'skipped' or 'executed'"
  tasks:
    # 0 load-event-by-code
    - type: "document"
      name: "load-event-by-code"
      description: "Search for events in the database."
      condition: "$.get('event_code') is not None"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
        search-sorters: ["updated", 1]
      filters:
        value.sport_event.id: "$.get('event_code')"
      outputs:
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_polls_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_polls_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 1 load-event
    - type: "document"
      name: "load-event-prelive"
      description: "Search for events in the database."
      condition: "$.get('event-exists') is not True"
      config:
        action: "search"
        search-limit: 1
        search-vector: false
      filters:
        value.sport_event_status.status: "{'$in': ['not_started', 'live']}"
        value.version_control.reporter_polls_es_status: "{'$exists': False}"
        value.version_control.reporter_briefing_es_status: "'processed'"
        value.start_time: "{'$lt': datetime.utcnow() + timedelta(hours=72)}"
        value.processing: "{'$ne': True}"
      inputs:
        name: "'schedule'"
      outputs:
        event_code: "$.get('documents')[0].get('value').get('sport_event', {}).get('id') if $.get('documents') else None"
        event-exists: "len($.get('documents', [])) > 0"
        event-selected: "$.get('documents')[0].get('value', {}) if $.get('documents') else None"
        reporter_polls_count: "$.get('documents')[0].get('value', {}).get('version_control', {}).get('reporter_polls_count', 0) if $.get('documents') else None"
        season_code: "$.get('documents')[0].get('value', {}).get('sport_event', {}).get('sport_event_context', {}).get('season', {}).get('id', '') if $.get('documents') else None"
        title: "$.get('documents')[0].get('value').get('title') if $.get('documents') else None"
    # 2 update-event-status
    - type: "document"
      name: "update-event-preevent-start"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('event-selected'),
            'processing': True,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'reporter_polls_es_status': 'processing'
            }
          }
      metadata:
        event_code: "$.get('event_code')"
    # 3 load-content-snippet
    - type: "document"
      name: "load-content-snippet"
      description: "Load the content snippet."
      condition: "$.get('event-exists') is True"
      config:
        action: "search"
        search-limit: 25
        search-vector: false
      filters:
        metadata: |
          {
            'event_code': $.get('event_code'),
            'language': 'en'
          }
      inputs:
        name: "'content-snippet'"
      outputs:
        content-snippets: "[{**d.get('value', {})} for d in $.get('documents', [])]"
    # 4 prompt-content-poll-es
    - type: "prompt"
      name: "prompt-reporter-polls-es"
      description: "Generate a poll for the upcoming game"
      condition: "$.get('event-exists') is True"
      connector:
        name: "openai"
        command: "invoke_prompt"
        model: "gpt-4o"
      inputs:
        content-snippets: "$.get('content-snippets')"
      outputs:
        bulk-poll-es: |
          [
            {
              **c,
              'title': f"$.(title) - {c.get('question', '')}",
              'metadata': {
                'event_code': '$.(event_code)',
                'language': 'es'
              }
            }
            for c in $.get('polls', [])
          ]
        content-polls: "$"
    # 5 bulk-save-polls
    - type: "document"
      name: "bulk-save-polls"
      description: "Bulk save the polls."
      config:
        action: "bulk-save"
        embed-vector: true
        force-update: true
      condition: "$.get('event-exists') is True"
      connector:
        name: "openai"
        command: "invoke_embedding"
        model: "text-embedding-3-small"
      document_name: "content-poll"
      documents:
        items: "$.get('parsed-items')"
      inputs:
        parsed-items: $.get('bulk-poll-es', [])
    # 6 update-event-preevent
    - type: "document"
      name: "update-event-preevent-end"
      description: "Update the events document preevent."
      condition: "$.get('event-exists') is True"
      config:
        action: "update"
        embed-vector: false
        force-update: true
      documents:
        soccer-game: |
          {
            **$.get('event-selected'),
            'processing': False,
            'version_control': {
              **$.get('event-selected').get('version_control', {}),
              'reporter_polls_count': $.get('reporter_polls_count', 0) + 1,
              'reporter_polls_es_status': 'processed',
              'updated': datetime.utcnow()
            }
          }
      metadata:
        event_code: "$.get('event-selected').get('sport_event', {}).get('id')"
